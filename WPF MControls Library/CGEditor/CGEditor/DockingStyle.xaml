<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock">
    <Style x:Key="DockingManagerStyle1" TargetType="{x:Type xcad:DockingManager}">
        
        <Setter Property="AnchorablePaneControlStyle">
            <Setter.Value>
                <Style TargetType="{x:Type xcad:LayoutAnchorablePaneControl}">
                    <Setter Property="TabStripPlacement" Value="Bottom"/>
                    <Setter Property="Foreground" Value="#2C2C2C"/>
                    <Setter Property="Background" Value="#FF1c97ea"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorablePaneControl}">
                                <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Background="Transparent" Grid.RowSpan="2"/>
                                    <Border x:Name="ContentPanel" BorderBrush="#FF1c97ea" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="0" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Cycle">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <xcad:AnchorablePaneTabPanel  x:Name="HeaderPanel" FlowDirection="LeftToRight" IsItemsHost="True" Margin="2,0,2,2" Grid.Row="1" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Grid SnapsToDevicePixels="True">
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="White"/>
                                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                                    <Setter Property="Margin" Value="0,-1,-1,-2"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}"/>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                    <Setter Property="Panel.ZIndex" Value="0"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Items.Count, FallbackValue=1, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="1">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <xcad:LayoutAnchorableTabItem Model="{Binding}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <xcad:LayoutAnchorableControl Model="{Binding}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="AnchorSideTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorSideControl}">
                    <ItemsControl>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True">
                                    <StackPanel.Orientation>
                                        <Binding Path="Model.Side" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xcad:LayoutAnchorSideControl}}">
                                            <Binding.Converter>
                                                <xcad:AnchorSideToOrientationConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </StackPanel.Orientation>
                                </StackPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AnchorGroupTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorGroupControl}">
                    <ItemsControl>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.LayoutTransform>
                            <RotateTransform>
                                <RotateTransform.Angle>
                                    <Binding Path="Model.Parent.Side" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <xcad:AnchorSideToAngleConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </RotateTransform.Angle>
                            </RotateTransform>
                        </ItemsControl.LayoutTransform>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AnchorTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorControl}">
                    <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1" Margin="2" Padding="2">
                        <ContentPresenter ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xcad:DockingManager}}}" Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentTitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AnchorableTitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AnchorableContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="{Binding FloatCommand}" Header="Float"/>
                    <MenuItem Command="{Binding DockCommand}" Header="Dock"/>
                    <MenuItem Command="{Binding DockAsDocumentCommand}" Header="Dock as Tabbed Document"/>
                    <MenuItem Command="{Binding AutoHideCommand}" Header="Auto Hide"/>
                    <MenuItem Command="{Binding HideCommand}" Header="Hide">
                        <MenuItem.Visibility>
                            <Binding Mode="OneWay" Path="IsEnabled" RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <xcad:BoolToVisibilityConverter/>
                                </Binding.Converter>
                            </Binding>
                        </MenuItem.Visibility>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="{Binding CloseCommand}" Header="Close">
                        <MenuItem.Visibility>
                            <Binding Mode="OneWay" Path="IsEnabled" RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <xcad:BoolToVisibilityConverter/>
                                </Binding.Converter>
                            </Binding>
                        </MenuItem.Visibility>
                    </MenuItem>
                    <MenuItem Command="{Binding CloseAllButThisCommand}" Header="Close All But This"/>
                    <MenuItem Command="{Binding FloatCommand}" Header="Float"/>
                    <MenuItem Command="{Binding DockAsDocumentCommand}" Header="Dock as Tabbed Document"/>
                    <MenuItem Command="{Binding NewHorizontalTabGroupCommand}" Header="New Horizontal Tab Group">
                        <MenuItem.Visibility>
                            <Binding Mode="OneWay" Path="IsEnabled" RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <xcad:BoolToVisibilityConverter/>
                                </Binding.Converter>
                            </Binding>
                        </MenuItem.Visibility>
                    </MenuItem>
                    <MenuItem Command="{Binding NewVerticalTabGroupCommand}" Header="New Vertical Tab Group">
                        <MenuItem.Visibility>
                            <Binding Mode="OneWay" Path="IsEnabled" RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <xcad:BoolToVisibilityConverter/>
                                </Binding.Converter>
                            </Binding>
                        </MenuItem.Visibility>
                    </MenuItem>
                    <MenuItem Command="{Binding MoveToNextTabGroupCommand}" Header="Move To Next Tab Group">
                        <MenuItem.Visibility>
                            <Binding Mode="OneWay" Path="IsEnabled" RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <xcad:BoolToVisibilityConverter/>
                                </Binding.Converter>
                            </Binding>
                        </MenuItem.Visibility>
                    </MenuItem>
                    <MenuItem Command="{Binding MoveToPreviousTabGroupCommand}" Header="Move To Previous Tab Group">
                        <MenuItem.Visibility>
                            <Binding Mode="OneWay" Path="IsEnabled" RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <xcad:BoolToVisibilityConverter/>
                                </Binding.Converter>
                            </Binding>
                        </MenuItem.Visibility>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentPaneMenuItemHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IconContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform">
                        <Image.Source>
                            <Binding Path="IconSource">
                                <Binding.Converter>
                                    <xcad:NullToDoNothingConverter/>
                                </Binding.Converter>
                            </Binding>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:DockingManager}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid FlowDirection="LeftToRight">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Content="{TemplateBinding LayoutRootPanel}" Grid.Column="1" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding RightSidePanel}" Grid.Column="2" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding LeftSidePanel}" Grid.Column="0" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding TopSidePanel}" Grid.Column="1" Grid.Row="0"/>
                            <ContentPresenter Content="{TemplateBinding BottomSidePanel}" Grid.Column="1" Grid.Row="2"/>
                            <ContentPresenter x:Name="PART_AutoHideArea" Content="{TemplateBinding AutoHideWindow}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Grid.Row="1" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>